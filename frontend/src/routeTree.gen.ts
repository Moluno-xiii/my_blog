/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth/route'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as PostIdImport } from './routes/post/$id'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AdminCreatePostImport } from './routes/admin/create-post'
import { Route as AdminMyPostsRouteImport } from './routes/admin/my-posts/route'
import { Route as AdminEditPostIdImport } from './routes/admin/edit-post/$id'
import { Route as AdminMyPostsPostsIndexImport } from './routes/admin/my-posts/posts/index'
import { Route as AdminMyPostsDraftsIndexImport } from './routes/admin/my-posts/drafts/index'
import { Route as AdminMyPostsPostsIdImport } from './routes/admin/my-posts/posts/$id'
import { Route as AdminMyPostsDraftsIdImport } from './routes/admin/my-posts/drafts/$id'

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const PostIdRoute = PostIdImport.update({
  id: '/post/$id',
  path: '/post/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminCreatePostRoute = AdminCreatePostImport.update({
  id: '/create-post',
  path: '/create-post',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminMyPostsRouteRoute = AdminMyPostsRouteImport.update({
  id: '/my-posts',
  path: '/my-posts',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminEditPostIdRoute = AdminEditPostIdImport.update({
  id: '/edit-post/$id',
  path: '/edit-post/$id',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminMyPostsPostsIndexRoute = AdminMyPostsPostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => AdminMyPostsRouteRoute,
} as any)

const AdminMyPostsDraftsIndexRoute = AdminMyPostsDraftsIndexImport.update({
  id: '/drafts/',
  path: '/drafts/',
  getParentRoute: () => AdminMyPostsRouteRoute,
} as any)

const AdminMyPostsPostsIdRoute = AdminMyPostsPostsIdImport.update({
  id: '/posts/$id',
  path: '/posts/$id',
  getParentRoute: () => AdminMyPostsRouteRoute,
} as any)

const AdminMyPostsDraftsIdRoute = AdminMyPostsDraftsIdImport.update({
  id: '/drafts/$id',
  path: '/drafts/$id',
  getParentRoute: () => AdminMyPostsRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin/my-posts': {
      id: '/admin/my-posts'
      path: '/my-posts'
      fullPath: '/admin/my-posts'
      preLoaderRoute: typeof AdminMyPostsRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/create-post': {
      id: '/admin/create-post'
      path: '/create-post'
      fullPath: '/admin/create-post'
      preLoaderRoute: typeof AdminCreatePostImport
      parentRoute: typeof AdminRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof AuthRouteImport
    }
    '/post/$id': {
      id: '/post/$id'
      path: '/post/$id'
      fullPath: '/post/$id'
      preLoaderRoute: typeof PostIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/edit-post/$id': {
      id: '/admin/edit-post/$id'
      path: '/edit-post/$id'
      fullPath: '/admin/edit-post/$id'
      preLoaderRoute: typeof AdminEditPostIdImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/my-posts/drafts/$id': {
      id: '/admin/my-posts/drafts/$id'
      path: '/drafts/$id'
      fullPath: '/admin/my-posts/drafts/$id'
      preLoaderRoute: typeof AdminMyPostsDraftsIdImport
      parentRoute: typeof AdminMyPostsRouteImport
    }
    '/admin/my-posts/posts/$id': {
      id: '/admin/my-posts/posts/$id'
      path: '/posts/$id'
      fullPath: '/admin/my-posts/posts/$id'
      preLoaderRoute: typeof AdminMyPostsPostsIdImport
      parentRoute: typeof AdminMyPostsRouteImport
    }
    '/admin/my-posts/drafts/': {
      id: '/admin/my-posts/drafts/'
      path: '/drafts'
      fullPath: '/admin/my-posts/drafts'
      preLoaderRoute: typeof AdminMyPostsDraftsIndexImport
      parentRoute: typeof AdminMyPostsRouteImport
    }
    '/admin/my-posts/posts/': {
      id: '/admin/my-posts/posts/'
      path: '/posts'
      fullPath: '/admin/my-posts/posts'
      preLoaderRoute: typeof AdminMyPostsPostsIndexImport
      parentRoute: typeof AdminMyPostsRouteImport
    }
  }
}

// Create and export the route tree

interface AdminMyPostsRouteRouteChildren {
  AdminMyPostsDraftsIdRoute: typeof AdminMyPostsDraftsIdRoute
  AdminMyPostsPostsIdRoute: typeof AdminMyPostsPostsIdRoute
  AdminMyPostsDraftsIndexRoute: typeof AdminMyPostsDraftsIndexRoute
  AdminMyPostsPostsIndexRoute: typeof AdminMyPostsPostsIndexRoute
}

const AdminMyPostsRouteRouteChildren: AdminMyPostsRouteRouteChildren = {
  AdminMyPostsDraftsIdRoute: AdminMyPostsDraftsIdRoute,
  AdminMyPostsPostsIdRoute: AdminMyPostsPostsIdRoute,
  AdminMyPostsDraftsIndexRoute: AdminMyPostsDraftsIndexRoute,
  AdminMyPostsPostsIndexRoute: AdminMyPostsPostsIndexRoute,
}

const AdminMyPostsRouteRouteWithChildren =
  AdminMyPostsRouteRoute._addFileChildren(AdminMyPostsRouteRouteChildren)

interface AdminRouteRouteChildren {
  AdminMyPostsRouteRoute: typeof AdminMyPostsRouteRouteWithChildren
  AdminCreatePostRoute: typeof AdminCreatePostRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminEditPostIdRoute: typeof AdminEditPostIdRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminMyPostsRouteRoute: AdminMyPostsRouteRouteWithChildren,
  AdminCreatePostRoute: AdminCreatePostRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminEditPostIdRoute: AdminEditPostIdRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin/my-posts': typeof AdminMyPostsRouteRouteWithChildren
  '/admin/create-post': typeof AdminCreatePostRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/post/$id': typeof PostIdRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/edit-post/$id': typeof AdminEditPostIdRoute
  '/admin/my-posts/drafts/$id': typeof AdminMyPostsDraftsIdRoute
  '/admin/my-posts/posts/$id': typeof AdminMyPostsPostsIdRoute
  '/admin/my-posts/drafts': typeof AdminMyPostsDraftsIndexRoute
  '/admin/my-posts/posts': typeof AdminMyPostsPostsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin/my-posts': typeof AdminMyPostsRouteRouteWithChildren
  '/admin/create-post': typeof AdminCreatePostRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/post/$id': typeof PostIdRoute
  '/admin': typeof AdminIndexRoute
  '/admin/edit-post/$id': typeof AdminEditPostIdRoute
  '/admin/my-posts/drafts/$id': typeof AdminMyPostsDraftsIdRoute
  '/admin/my-posts/posts/$id': typeof AdminMyPostsPostsIdRoute
  '/admin/my-posts/drafts': typeof AdminMyPostsDraftsIndexRoute
  '/admin/my-posts/posts': typeof AdminMyPostsPostsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/admin/my-posts': typeof AdminMyPostsRouteRouteWithChildren
  '/admin/create-post': typeof AdminCreatePostRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/post/$id': typeof PostIdRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/edit-post/$id': typeof AdminEditPostIdRoute
  '/admin/my-posts/drafts/$id': typeof AdminMyPostsDraftsIdRoute
  '/admin/my-posts/posts/$id': typeof AdminMyPostsPostsIdRoute
  '/admin/my-posts/drafts/': typeof AdminMyPostsDraftsIndexRoute
  '/admin/my-posts/posts/': typeof AdminMyPostsPostsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/my-posts'
    | '/admin/create-post'
    | '/auth/login'
    | '/auth/signup'
    | '/post/$id'
    | '/admin/'
    | '/admin/edit-post/$id'
    | '/admin/my-posts/drafts/$id'
    | '/admin/my-posts/posts/$id'
    | '/admin/my-posts/drafts'
    | '/admin/my-posts/posts'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/admin/my-posts'
    | '/admin/create-post'
    | '/auth/login'
    | '/auth/signup'
    | '/post/$id'
    | '/admin'
    | '/admin/edit-post/$id'
    | '/admin/my-posts/drafts/$id'
    | '/admin/my-posts/posts/$id'
    | '/admin/my-posts/drafts'
    | '/admin/my-posts/posts'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth'
    | '/admin/my-posts'
    | '/admin/create-post'
    | '/auth/login'
    | '/auth/signup'
    | '/post/$id'
    | '/admin/'
    | '/admin/edit-post/$id'
    | '/admin/my-posts/drafts/$id'
    | '/admin/my-posts/posts/$id'
    | '/admin/my-posts/drafts/'
    | '/admin/my-posts/posts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  PostIdRoute: typeof PostIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  PostIdRoute: PostIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/auth",
        "/post/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/my-posts",
        "/admin/create-post",
        "/admin/",
        "/admin/edit-post/$id"
      ]
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/login",
        "/auth/signup"
      ]
    },
    "/admin/my-posts": {
      "filePath": "admin/my-posts/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/my-posts/drafts/$id",
        "/admin/my-posts/posts/$id",
        "/admin/my-posts/drafts/",
        "/admin/my-posts/posts/"
      ]
    },
    "/admin/create-post": {
      "filePath": "admin/create-post.tsx",
      "parent": "/admin"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/post/$id": {
      "filePath": "post/$id.tsx"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/admin/edit-post/$id": {
      "filePath": "admin/edit-post/$id.tsx",
      "parent": "/admin"
    },
    "/admin/my-posts/drafts/$id": {
      "filePath": "admin/my-posts/drafts/$id.tsx",
      "parent": "/admin/my-posts"
    },
    "/admin/my-posts/posts/$id": {
      "filePath": "admin/my-posts/posts/$id.tsx",
      "parent": "/admin/my-posts"
    },
    "/admin/my-posts/drafts/": {
      "filePath": "admin/my-posts/drafts/index.tsx",
      "parent": "/admin/my-posts"
    },
    "/admin/my-posts/posts/": {
      "filePath": "admin/my-posts/posts/index.tsx",
      "parent": "/admin/my-posts"
    }
  }
}
ROUTE_MANIFEST_END */
